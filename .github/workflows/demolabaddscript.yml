name: Update Article with PowerShell Scripts

on:
  push:
    branches:
      - main  # La rama que deseas monitorear

jobs:
  update-article:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config user.name "schmittnieto"
          git config user.email "cristian@schmitt-nieto.com"

      - name: Insert PowerShell Code into Article
        run: |
          # Definir variables
          ARTICLE_PATH="_posts/2024-10-04-azure-stack-hci-demolab.md"
          SCRIPT_DIR="assets/repo/AzSHCI/scripts/01Lab"

          # Verificar que el artículo existe
          if [ ! -f "$ARTICLE_PATH" ]; then
            echo "El archivo $ARTICLE_PATH no existe."
            exit 1
          fi

          # Función para insertar scripts usando perl
          insert_script() {
            local script_path=$1
            local start_marker=$2
            local end_marker=$3

            if [ ! -f "$script_path" ]; then
              echo "El script $script_path no existe."
              exit 1
            fi

            local script_content
            script_content=$(cat "$script_path")
            
            # Escapar barras y otros caracteres si es necesario
            # Aquí no es necesario escapar, ya que `perl` maneja bien el contenido
            # Reemplazar el bloque entre los marcadores con el contenido del script
            perl -0777 -i -pe '
              s/(<!-- '"$start_marker"' -->)(.*?)(<!-- '"$end_marker"' -->)/$1\n```powershell\n'"$script_content"'\n```\n$3/s;
            ' "$ARTICLE_PATH"

            echo "Bloque $start_marker insertado correctamente."
          }

          # Insertar cada script
          insert_script "$SCRIPT_DIR/00_Infra_AzHCI.ps1" "00INFRA:START" "00INFRA:END"
          insert_script "$SCRIPT_DIR/01_DC.ps1" "01DC:START" "01DC:END"
          insert_script "$SCRIPT_DIR/02_Cluster.ps1" "02CLUSTER:START" "02CLUSTER:END"
          insert_script "$SCRIPT_DIR/03_TroubleshootingExtensions.ps1" "03TROUBLESHOOTING:START" "03TROUBLESHOOTING:END"
          insert_script "$SCRIPT_DIR/99_Offboarding.ps1" "99OFFBOARDING:START" "99OFFBOARDING:END"

          # Opcional: Verificar el contenido del artículo después de la inserción
          echo "Contenido del artículo después de la inserción:"
          cat "$ARTICLE_PATH"

      - name: Commit and Push Changes
        run: |
          git add .
          git commit -m "Update article with latest PowerShell scripts"
          git push origin main
